{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,cAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAkB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,QAMlD,SACI,uBACIC,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,8DAEAI,MAAQF,GAFR,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAY,WACRC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAEZ,CAACpB,IAEGqB,EDdwBQ,CAAc7B,GAAjCa,EAJuB,EAI5BN,KAAaa,EAJe,EAIfA,QAMpB,OACI,qCACA,mCAAMpB,EAAN,OAEEoB,EAAU,2CAAmB,KAE/B,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAACC,GACT,OAAO,cAAC,EAAD,aAAaC,GAAMD,EAAIC,IAAQD,aEpB7CoB,EAAe,WAAM,MAIM5C,mBAAS,CAAC,UAJhB,mBAIvBQ,EAJuB,KAIXT,EAJW,KAW9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQS,EAAWe,KAAK,SAAET,GACd,OAAO,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,Y,MCpB9C+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a889e829.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n    // useState para ver que va escribiendo el usuario\r\n    const [inputValue, setInputValue] = useState('Hola Mundo');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // validacion en el submit\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( categories => [ inputValue, ...categories, ]);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value= {inputValue} \r\n                onChange= { handleInputChange } \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","// necesitamos recibir la categoria y hacer una http request\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=7&api_key=mUn3MTeYVoARvjgjFYm1z87czngkV1Nz`;\r\n    const resp = await fetch ( url );\r\n    const { data } = await resp.json();\r\n    const gifs = data.map ( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src = {url} alt= {title} />\r\n            <p>{ title }</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    // USAMOS EL CUSTOM HOOK\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    \r\n    // necesitamos recibir la categoria y hacer una http request\r\n    \r\n    // getGifs();\r\n    return (\r\n        <>\r\n        <h3> {category} </h3>\r\n\r\n        { loading ? <p>Loading...</p>: null}\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n            {\r\n                images.map( (img) => {\r\n                    return <GifGridItem id = {img.id} {...img}/>\r\n                })\r\n            }\r\n                \r\n        </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setTimeout( () => {\r\n                    console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    }); \r\n                }, 3000)\r\n            })\r\n    }, [category])\r\n\r\n    return state; // devuelve la info del useState\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['Akira', 'One Punch', 'Dragon Ball'];\r\n    // Aplicamos useState\r\n    const [categories, setCategories] = useState(['Akira']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories( [...categories, 'One Piece'] );\r\n    //     setCategories( elements => [...elements, 'One Piece']);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( ( category ) => {\r\n                        return <GifGrid key={ category } category={ category } />\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// 1ยบ Creamos componente GifExpertApp\n\n"],"sourceRoot":""}